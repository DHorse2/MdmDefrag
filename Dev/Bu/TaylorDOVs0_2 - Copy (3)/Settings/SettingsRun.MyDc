# This script is part of the standard  disk configuration
# Author: David G. Horsman (DBA MacroDM) (C) 2019
# based on MyDefrag distribution.

!include "..\..\Display\DisplaySetDateTimeRun.MyDc"!
SetVariable(RunId,		"C:\MyDefragLogs\!RunDescription! !RunDateTime!")
SetVariable(Heading,	"Initializing...")
WriteLogfile("!RunId!", "!ZoneStatsData!")

!include "..\..\Settings\SettingsSysProcessPriority.MyDc"!
!include "..\..\Settings\SettingsSysExitIfTimeout.MyDc"!

WindowSize(minimized) 
!include "..\..\Display\DisplayDiskmapFlip.MyDc"!
!include "..\..\Display\DisplayColors.MyDc"!

# Processes:
	# This Process
SetVariable(RunProcessID,ProcessID)

	# Kill other instances
	/* Kill other MyDefrag Instances. */
	/* Oops! This commits suicide. */
	/* 	RunProgram("..\..\pskill.exe", "-t MyDefrag.exe") */
	/* Pause(10) */
	
	/* If another instance of MyDefrag is already running then exit. */
	/* Oops again. I don't know if this cause the hidden instance */
	/* to hang around after the run. */
	/* Warning: <alt><Run><Exit> seems to hide the instance not end it. */
	/* The task mananager may be needed. This is under investigation. */

!include "..\..\Settings\SettingsSysOtherInstances.MyDc"!

	# StatusBar

	/* Debug:
	1 Fatal error messages. 
	2 Warning messages. 
	4 Basic information messages. 
	8 Scripting information messages. 
	16 Scripting high-detail information messages. 
	32 Volume analysis information messages. 
	64 Volume analysis high-detail information messages. 
	128 Moving items information messages. 
	256 Moving items high-detail information messages. 
	*/
Debug(16)
	
StatusBar(Status Path MouseOver)
!include "..\..\Display\DisplayStatusBar.MyDc"!
	
	# Power management
	/* SetScreenPowerSaver(off) */
!include "..\..\Settings\SettingsSysPowerSaver.MyDc"!

/* ---------------------------------------------------------- */
# Script Directory Location:
!include "..\..\Settings\SettingsSysScriptDirectoryLocation.MyDc"!

/* ---------------------------------------------------------- */
# DISPLAY - What text is displayed in Titlebar, data fields and reports.

!include "..\..\Settings\SettingsRunFileStepDescriptions.MyDc"!

/* Progress Display */
SetVariable(ZoneListByLine, 	"Volume start.")
SetVariable(ZoneStepByLine, 	"")

/* There is 6 digit decimal precision so by using */
/* 1Mb the full number is displayed in a much more */
/* readable form. */

SetVariable(DisplayUnitDivisor, 	1000000) // 1MB.

/* ---------------------------------------------------------- */
# SERVER INFORMATION

	/* ServerName (IE. Computer name or number.) not used. */
	/* System99 */
		# SetVariable(ServerName,"Pc15")

		!include "..\..\Settings\SettingsSysServerNames.MyDc"!
	
	/* Descriptive Information so maybe */
	/* VolumeNamePrefix (IE. Person or company initials) not used. */
	/* "Xyz" */
		# SetVariable(VolumeNamePrefix,"Mdm")

		!include "..\..\Settings\SettingsSysVolumeNamePrefix.MyDc"!

	/* Server name full is usually the server and computer combined. not used. */

		SetVariable(ServerNameFull,"!VolumeNamePrefix!!ServerName!")
	
	!include "..\..\Display\DisplaySetServer.MyDc"!

/* ---------------------------------------------------------- */
# VOLUMES
/* ---------------------------------------------------------- */

	!include "..\..\Volume\VolumeDoCurrentClear.MyDc"!
	  
	SetVariable(VolumeLabel, "NotSet")
	SetVariable(VolumeDescription, "")

	SetVariable(FileStepDescription,"Initializing run...")
	!include "..\..\Display\BannerSet.MyDc"!

/* ---------------------------------------------------------- */
# VOLUME TYPES

	/* Volumes */
	/* . */
	/* Only those were fully implemented: */
	/* Sys */
	/* Dev */
	/* . */
	/* Common types of volumes: */
	/* Data */
	/* Archive */
	/* . */
	/* Other historical volumes: */
	/* Test */
	/* Live */
	/* Server */
	/* Client */
	/* SysUtils */
	/* . */

# IMPORTANT: VOLUME NAME: SET YOUR:
	/* VOLUME NAMES IN SettingsYours\SettingsYoursVolumeNames.MyDc */
	/* 		or    			*/
	/* VOLUME NAME (one only for override) in SettingsYours\SettingsYoursVolume.MyDc */
	/* 		or here also 	*/
	SetVariable(VolumeSys,"!VolumeNamePrefix!Sys")
	SetVariable(VolumeDev,"!VolumeNamePrefix!Dev")

	/* SetVariable(VolumeSys,"C:") */
	/* SetVariable(VolumeDev,"E:") */

	/* These are for dedicated disks. */
	/* So it means JUST Data or JUST Archives. */

	SetVariable(VolumeData,"!VolumeNamePrefix!Data")
	SetVariable(VolumeArchive,"!VolumeNamePrefix!Archive")
	
	!include "..\..\Settings\SettingsYours\SettingsYoursSysVolumeNames.MyDc"!

/* ---------------------------------------------------------- */
# OS Disk Usage.
/* Percentage of disk used by OS */

	SetVariable(OsPer, 0.18)

	     SetVariable(ZoneCountOs, 5)

       SetVariable(ZoneCountType, 0) // not used
      SetVariable(ZoneCountVolume, ZoneCountOs + ZoneCountType)

	    SetVariable(ZoneCountSys, 2)
	    SetVariable(ZoneCountDev, 7)

	   SetVariable(ZoneCountData, 0)
	SetVariable(ZoneCountArchive, 0)
	
	/* SetVariable(GapCalc, VolumeFreeAdj * ZoneAdjRoundUp) */

/* ---------------------------------------------------------- */
# ZONE TYPES. 
/* ---------------------------------------------------------- */
	/* Type Labels, Descriptions, Gaps and Rounding. */
	/* Load the Zone Definitions */
	/* These are file categories basically */
	/* and are maintained in a single file */
	/* for ease of maintenance. Here: */
	
	!include "..\..\Settings\SettingsSysZoneNames.MyDc"!

/* ---------------------------------------------------------- */
# GAPS
	# TEST (FAILED!!!) NO BOOLEAN LOGIC AVAILABLE.
	SetVariable(FlagDoNotVacate, 0)
 
/* ---------------------------------------------------------- */
# ZONE
	SetVariable(ZoneNoCurrent, 		0)
	SetVariable(ZoneNoAdjCurrent, 	0) 
	SetVariable(ZoneCurrentAjust,	0)

	SetVariable(ZoneListByLine, 		"Volume started.
")
	SetVariable(ZoneStepByLine, 		"Initialize.
")
	SetVariable(ZoneStatisticsDetail, 	"")

/* ---------------------------------------------------------- */
# ZONE FILE STEP (ACTIONS)
	/* Nothing to set here */

/* ---------------------------------------------------------- */
# BLOB SIZE

	# Size 10MB
	SetVariable(BlobFileSize, 10000000)

/* ---------------------------------------------------------- */
# SKIP BLOCK
 
/* (important for run efficiency.) */
/* FILES: */
/* Day Files:	10 */
/* Weekly:		10 */
/* Monthly:		500 */
/* Yearly:		1M */

	/* 100 Files - moved most blocks */
	 /* 10 Files - 20211105 (error - not done) */ 
	 /* 10 Files - (20211106) - Current */
	 /* 5 Files - (2021????) - */
	SetVariable(SkipBlockFilesDay,		10)
	SetVariable(SkipBlockFilesWeek,		10)
	SetVariable(SkipBlockFilesMonth,	500)
	SetVariable(SkipBlockFilesYear,		1000000)

	/* Current: */
	SetVariable(SkipBlockFiles,"!SkipBlockFilesMonth!")

/* BYTES: */
/* Day Bytes:	1MB */
/* Week Bytes:	1MB */
/* Month Bytes:	500MB */
/* Year Bytes:	5GB */

	 /* 50 MB Moved most existing blocks */
	 /* 5 MB 20211105 (not done) */ 
	 /* 1 MB 20211105 - Current */
	SetVariable(SkipBlockBytesDay,		1000000)
	SetVariable(SkipBlockBytesWeek,		1000000)
	SetVariable(SkipBlockBytesMonth,	500000000)
	SetVariable(SkipBlockBytesYear,		5000000000)

	/* Current: */
	SetVariable(SkipBlockBytes,"!SkipBlockBytesMonth!")

/* ---------------------------------------------------------- */
# ZONE LOCATION METHODS:

# No 1) Standard. You can ignore this section
	/* Gaps between zones are a percentage of */
	/* free space auto adjusted to pack the used */
	/* space closely together and for performance. */
	
	/* The calculation will clear the Gap */
	/* and RoundUp to the fixed value present */
	
	SetVariable(ZoneMethodStd, 1)

/* The following are NOT FULLY IMPLEMENTED OR TESTED */
# No 2) Mft. Relative to its location.
	SetVariable(ZoneMethodMft, (0-1))

# No 3) Os. Percentages are AFTER OsMftDir Space Used.
	SetVariable(ZoneMethodOs, (0-1))

# No 4) Orginal Mft/Os 1-5.
	SetVariable(ZoneMethodOrginal, (0-1))

# No 5) FIXED ZONES if you used them.
	
	SetVariable(ZoneMethodFixed, (0-1))
	SetVariable(ZoneMethodFixedPer, (0-1))

	/* Not recommended */
	/* However doing all calcs is informative regarding what */
	/* Types of Volume data (Zones) exist. */
	
	/* Your FIXED calculation method, this can be: */
	SetVariable(ZoneMethodFixedVariantPer, (0-1))
	
	/* 1) Percentage. */
		/* So when it is 1 or On. */
		/* Not great but easy to use. */
		 
	/* 2) Fixed volume location. */
		/* When 0 or Off it is a volume location. */
		/* You will have to change: */
		/* file item xxxxxxxxx??? */
	
	/* FIXED VALUES: */
		/* SetVariable(ZoneMethodFixed, 1) */
	
		# Setting the following to a percentage or number:
		/* OS */
	    SetVariable(ZoneOsBoot, 0) // 1
	    SetVariable(ZoneOsProgramHints, 0) // 2
	    SetVariable(ZoneOsPrograms, 0) // 3
	    
	    /* MFT */
	    SetVariable(ZoneMft, 0) // Volume dependent
	    SetVariable(ZoneMftDir, 0) // Volume dependent
	
		/* Volume Sys */
	    # Os 3
	    # Mft + 2
	    SetVariable(ZoneSysRegular, 0) // 5
	    SetVariable(ZoneDevSpaceHog, 0) // 6
	
		/* Volume Dev */
	    # Os 3
	    SetVariable(ZoneDevDevToDo, 0) // 4
	    SetVariable(ZoneDevIdeScripts, 0) // 5
	    SetVariable(ZoneDevLinksCorp, 0) // 6
	    SetVariable(ZoneDevPeople, 0) // 7
	    # Mft + 2
	    SetVariable(ZoneDevShares, 0) // 10
	    SetVariable(ZoneDevSystemOtherData, 0) // 11
	    SetVariable(ZoneDevReference, 0) // 12
	    SetVariable(ZoneDevSpaceHogsArchives, 0) // 13
	
		/* Volume Archive not used currently */
		/* Volume Data not used currently */

/* ---------------------------------------------------------- */
# LOGGING:
/* ---------------------------------------------------------- */

	# Log File Name:
	SetVariable(LogFileName,"Defrag !VolumeStepDescription! !Date!_!Time!")
	SetVariable(LogFileZoneName,"Defrag !VolumeStepDescription! !ZoneStepDescription! !Date!_!Time!")
	
	#SetVariable(LogFileName,"C:\MyDefragLogs\Defrag !VolumeStepDescription! !Date!_!Time!")
	#SetVariable(LogFileZoneName,"C:\MyDefragLogs\Defrag !VolumeStepDescription! !ZoneStepDescription! !Date!_!Time!")
	/* SetVariable(LogFileName,"..\..\Logs\!MdmMyDefrag! !Date!_!Time!.log") */
	/* SetVariable(LogFileName,"!ScriptDir!Logs\!MdmMyDefrag! !Date!_!Time!.log") */
	/* SetVariable(LogFileName,"Defrag!Date!_!Time!.txt") */
	/* SetVariable(LogFileName,"$ z Logs\Defrag!Date!_!Time!.txt") */
	
	SetVariable(VolumeStatisticsSummary, "Not ready")
	SetVariable(VolumeStatisticsDetailed, "Not ready")

/* ---------------------------------------------------------- */
# OVERRIDES
/* ---------------------------------------------------------- */

	# YOUR SETTINGS Volume overrides:
	!include "..\..\Settings\SettingsYours\SettingsYoursRun.MyDc"!

/* ---------------------------------------------------------- */
# Create Run Log:

/* Write the header to the logfile. */
	!include "..\..\Display\BannerSet.MyDc"!

	WriteLogfile("!LogFileName!", "Log File: !LogFileName! Started.")
	!include "..\..\Display\BannerLog.MyDc"!
	AppendLogfile("!LogFileName!", ".")

/* ---------------------------------------------------------- */
/* Script Information */
	AppendLogfile("!LogFileName!", "!Description! Started: !Date! !Time!")
	AppendLogfile("!LogFileName!", ".")
	AppendLogfile("!LogFileName!", "Script:")
	AppendLogfile("!LogFileName!", "!ScriptTitle!")
	AppendLogfile("!LogFileName!", ".")
	AppendLogfile("!LogFileName!", "Script Directory:")
	AppendLogfile("!LogFileName!", "!ScriptDir!")
	AppendLogfile("!LogFileName!", ".")
	AppendLogfile("!LogFileName!", "Log File:")
	AppendLogfile("!LogFileName!", "!LogFileName!")
	AppendLogfile("!LogFileName!", ".")

/* ---------------------------------------------------------- */
# Run Preprocessing Do Before.
!include "..\..\Settings\SettingsRu$ DoBefore.MyDc"!
