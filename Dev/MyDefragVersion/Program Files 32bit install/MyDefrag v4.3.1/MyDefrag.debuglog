# See the 'MyDefrag.log' file for information intended for endusers. This is the debug
# logfile. The contents is highly technical and not documented. See the 'Debug' setting
# or the '-d' commandline option to control the level of information in this file.
#
Version: MyDefrag v4.3.1
Date: 2019/06/19 07:05:23
Windows version: v6.0 build 6002 S
Commandline: "C:\Program Files\MyDefrag v4.3.1\MyDefrag.exe" -r "E:\Ide\MyDefrag\MyDefrag\MdmScriptMyDefragVs4_3_1\DefragAllMonthly.MyD" 
Working Directory: E:\Ide\MyDefrag\MyDefrag\MdmScriptMyDefragVs4_3_1
Userid: MdmSysUser
InstallPath = C:\Program Files\MyDefrag v4.3.1\
07:05:23 Comment error in script 'E:\Ide\MyDefrag\MyDefrag\MdmScriptMyDefragVs4_3_1\DefragAllMonthly.MyD' at line 135 column 1.

The comment has no end, it was started but not finished.
07:05:23 Script:
  1. # MyDefrag v4.0 default script: System Disk Monthly
  2. #
  3. # This script is part of the standard Mdm disk configuration
  4. # Author: David G. Horsman (DBA MacroDM) (C) 2019
  5. # based on MyDefrag distribution.
  6. 
  7. # This script is part of the standard  disk configuration
  8. # Author: David G. Horsman (DBA MacroDM) (C) 2019
  9. # based on MyDefrag distribution.
 10. 
 11. /* What you need to set: */
 12. /* The MFT relative location */
 13. /* The minimum No of Files and Bytes to qualify for resorting */
 14. /* Your Sys and Dev Volume Names */
 15. /* The name and location of your log files. */
 16. /* Maybe things like ProcessPriority, ExitIfTimeout... you decide. */
 17. /* Scheduling, use and workload determine ProcessPriority. */
 18. 
 19. /* Problems: */
 20. /* CRASHES: I have seen it crash a few times but it has never */
 21. /* done damage in numerous years of use. */
 22. 
 23. /* LOGS: You do not get partial logs on aborted, paniced or crashed runs */
 24. /* This makes debugging very difficult. */
 25. /* I am assuming they will work and look awesome... */
 26. 
 27. /* Re MODS: Note the simple design pattern using included text components. */
 28. /* Poor mans OO. */
 29. /* In particular, ERROR LINE NUMBERS are the line number */
 30. /* including all "include" text. You have to add up document lengths */
 31. /* to get the correct line number and document. */
 32. 
 33. /* Tip: By adding obvious sytax errors above where the error occurred */
 34. /* you can quickly narrow down which line is the problem. */  
 35. 
 36. /* The other settings below are mainly to demonstrate how */
 37. /* They help make your log file look pretty and impress the boss. */
 38. /* Your cat doesn't care and you should stop feeding it. */
 39. /* Our previous systems were managed using a simple system. */
 40. /* This helps to understand the Zones as categories I hope. */
 41. 
 42. /* HERE */
 43. ProcessPriority(Normal)
 44. 
 45. ExitIfTimeout(180) // default 120.
 46. 
 47. /* HERE */
 48. /* Automatically exit MyDefrag when it is finished. */
 49. /* WhenFinished(Exit) */
 50. 
 51. StatusBar(Status Path MouseOver)
 52. 
 53. /* VolumeNamePrefix (IE. Person or company initials) not used. */
 54. /* "Xyz" */
 55. SetVariable(VolumeNamePrefix,"Mdm")
 56. 
 57. /* ServerName (IE. Computer name or number.) not used. */
 58. /* System99 */
 59. SetVariable(ServerName,"Pc15")
 60. 
 61. /* Server name full is usually the server and computer combined. not used. */
 62. SetVariable(ServerNameFull,"!VolumeNamePrefix!!ServerName!")
 63. 
 64. /* Volumes */
 65. /* . */
 66. /* Only those were fully implemented: */
 67. /* Sys */
 68. /* Dev */
 69. /* . */
 70. /* Other historical volumes: */
 71. /* Data */
 72. /* Test */
 73. /* Live */
 74. /* Server */
 75. /* Client */
 76. /* SysUtils */
 77. /* . */
 78. 
 79. /* ? Current Volume ? Dunno. not used. */
 80. SetVariable(Volume,"!VolumeNamePrefix!Dev") 
 81. 
 82. /* HERE */
 83. SetVariable(VolumeSys,"!VolumeNamePrefix!Sys")
 84. SetVariable(VolumeDev,"!VolumeNamePrefix!Dev")
 85. SetVariable(VolumeData,"!VolumeNamePrefix!Data")
 86. 
 87. /* Regarding Volume names, this historically was handled by */
 88. /* Fixed drive letters higher up in the alphabet but that is */
 89. /* Problematic too. There were Dev, Test and Live systems */
 90. /* MdmTest */
 91. /* MdmLive */
 92. /* Anyway, that is a lot of drive letters or names either way. */
 93. /* Anyway again, note that these are logical volumes. */
 94. /* As in they are not pointers or links to directories on disks. */
 95. /* Which clearly do not have an MFT */
 96. /* Which support the age old "include" component design pattern. Yipee. */
 97. 
 98. /* Drive letters? (IE Was G: for Dev and Data previously.) */
 99. 
100. /* Script Directory */
101. /* Not needed */
102. SetVariable(ScriptDir,"E:\Ide\MyDefrag\MyDefrag\MdmScriptMyDefragVs4_3_1\")
103. 
104. /* SetVariable(ScriptDir,"\\!Server!\!Volume!\Ide\MyDefrag\MyDefrag\MdmScriptMyDefragVs4_3_1\") */
105. /* "E:\Ide\MyDefrag\MyDefrag\MdmScriptMyDefragVs4_3_1\" */
106. 
107. /* SEE HERE. Yes HERE! Below here dummy... */
108. 
109. /* You set your MFT percentage based on the size of your executable code base */
110. /* As of 20190618 40% leaves a lot of black space below the MFT. */
111. /* . */
112. /* However a large number of downloads and installs are underway */
113. /* (Probably) most of these should be on the system drive. */
114. /* . */
115. /* The point being that on a dev system with 3 development stacks */
116. /* a lot of that empty space would be used. */
117. /* . */
118. /* And what of the SDK libs and data? What became of them? */
119. /* Where did they go... or will go... */
120. 
121. /* HERE */
122. SetVariable(MftPer,0.35)
123. 
124. SetVariable(MftPerSystem,0.35)
125. SetVariable(MftPerDev,0.35)
126. SetVariable(MftPerData,0.35)
127. 
128. /* The first NUMBER argment is the minimum number of files in a block, for the block to be skipped. */ 
129. /* The second NUMBER argument is the minimum number of bytes that a block has to occupy for the block to be skipped. */ 
130. /* The two arguments are logically AND'ed, in words: the block must have at least argument1 files AND at least argument2 bytes. */ 
131. /* Syntax */
132. /* SkipBlock(NUMBER , NUMBER) */ 
133. /* So there is no point having (observed) your disk madly thrashing away to resort groups of files that have only */
134. /* had minor changes occur in their Last Access Date ordering. This wears out the disk and is very slow. */
135. /* Yearly: Should only be done once per year where this is turn off. A complete resort. /*
136. /* Monthly values are more inclusive where perhaps a resort is done or mainly done and */
137. /* Daily values should just clean up the disk a bit. */
138. /* Sound good? */
139. 
140. /* HERE */
141. /* Files: 1000 */
142. /* Monthly is set to the default */
143. SetVariable(SkipBlockFiles,1000)
144. 
145. SetVariable(SkipBlockFilesYear,1000)
146. SetVariable(SkipBlockFilesMonth,"!SkipBlockFiles!")
147. SetVariable(SkipBlockFilesDay,1000)
148. 
149. /* HERE */
150. /* Bytes: 500MB */
151. SetVariable(SkipBlockBytes,500000000)
152. 
153. SetVariable(SkipBlockBytesYear,500000000)
154. SetVariable(SkipBlockBytesMonth,"!SkipBlockBytes!")
155. SetVariable(SkipBlockBytesDay,500000000)
156. 
157. 
158. /* We only want to use a ratio of the free space relative to the volume. */
159. /* We could just use percentages of the total free space as well. */
160. 
161. /* Init */
162. /* SetVariable(VolumeFreeAdj,(VolumeFree * (VolumeUsed / VolumeSize))) */
163.   
164. /* HERE */
165. /* Log File Name */
166. SetVariable(LogFileName,"!ScriptDir!Logs\Defrag2019-06-19_07:05:23.txt")
167. 
168. /* SetVariable(LogFileName,"Defrag2019-06-19_07:05:23.txt") */
169. /* SetVariable(LogFileName,"Logs\Defrag2019-06-19_07:05:23.txt") */
170. 
171. /* Create Run Log */
172. /* Write the header to the logfile. */
173. /* See the "Settings.MyD" file for the definition of the "LogHeader" string. */
174. 
175. WriteLogfile("!LogFileName!", "!Title!") 
176. AppendLogfile("!LogFileName!", "!Description! Started: 2019-06-19 07:05:23")
177. AppendLogfile("!LogFileName!", ".")
178. AppendLogfile("!LogFileName!", "Script Directory:")
179. AppendLogfile("!LogFileName!", "!ScriptDir!")
180. AppendLogfile("!LogFileName!", ".")
181. AppendLogfile("!LogFileName!", "Log File:")
182. AppendLogfile("!LogFileName!", "!LogFileName!")
183. AppendLogfile("!LogFileName!", ".")
184. 
185. /* WhenFinished(Exit) */
186. 
187. Description('Mdm All Disk Monthly')
188. Title('!VolumeNamePrefix! !ServerNameFull! !Description! 2019-06-19 07:05:23')
189. AppendLogfile("!LogFileName!", "!Title!")
190. AppendLogfile("!LogFileName!", "!Description!")
191. 
192. 
193. AppendLogfile("!LogFileName!","System Disk from All Monthly 125")
194. # MyDefrag v4.0 default script: System Disk Monthly
195. #
196. # This script is part of the standard MyDefrag distribution.
197. 
198. Description("System Disk Monthly description")
199. 
200. /* System Disk */
201. AppendLogfile("!LogFileName!",".")
202. AppendLogfile("!LogFileName!","System Disk.")
203. AppendLogfile("!LogFileName!","System Disk Start: 2019-06-19 07:05:23")
204. 
205. AppendLogfile("!LogFileName!",".")
206. AppendLogfile("!LogFileName!","Volume: !VolumeSys!")
207. 
208. VolumeSelect
209.     Label("!VolumeSys!")
210. VolumeActions
211. 
212. /* Init */
213. SetVariable(VolumeFreeAdj,(VolumeFree * (VolumeUsed / VolumeSize)))
214. AppendLogfile("!LogFileName!", "Volume Size: !VolumeSize!")
215. AppendLogfile("!LogFileName!", "Volume Used: !VolumeUsed!")
216. AppendLogfile("!LogFileName!", "Volume Free: !VolumeFree!")
217. AppendLogfile("!LogFileName!", "Volume Free Adj: !VolumeFreeAdj!")
218. AppendLogfile("!LogFileName!", ".")
219.   
220.   AppendLogfile("!LogFileName!","System Zones. 144")
221.     /* System Zones */
222.   
223.   AppendLogfile("!LogFileName!", "System Disk optimized layout for boot and executables. 2019-06-19 07:05:23")
224.   /* Dgh 20190618 */
225.   
226.   /* Init */
227.   /* SetVariable(VolumeFreeAdj, */
228.   /* Don't set here, do it in the run */
229.   
230.   AppendLogfile("!LogFileName!", "Zone 1.")
231.   
232.   /* Place files at 30% into the data on the disk. */
233.   SetVariable(MftLocation, RoundUp(VolumeUsed * MftPer, VolumeUsed * 0.10))
234.   
235.   AppendLogfile("!LogFileName!", "MftLocation: !MftLocation! DoNotVacate 2019-06-19 07:05:23")
236.   MakeGap(MftLocation, DoNotVacate)
237.   
238.   AppendLogfile("!LogFileName!", "Zone 1: Place the MFT: 2019-06-19 07:05:23")
239.   /* and some other special NTFS files. */
240.   FileSelect
241.     SelectNtfsSystemFiles(yes)
242.   FileActions
243.     PlaceNtfsSystemFiles(Ascending, MftSize * 0.1)
244.   FileEnd
245. 
246.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.005, VolumeFreeAdj * 0.005))
247.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
248.   MakeGap(GapCurrent)
249. 
250.   AppendLogfile("!LogFileName!", "Zone 2.")
251.   AppendLogfile("!LogFileName!", "Zone Directories: 2019-06-19 07:05:23")
252.   FileSelect
253.     Directory(yes)
254.   FileActions
255.     SortByName(Ascending)
256.   FileEnd
257. 
258.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.1, VolumeFreeAdj * 0.05))
259.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
260.   MakeGap(GapCurrent)
261. 
262.   AppendLogfile("!LogFileName!", "Place files at the beginning of the disk: 2019-06-19 07:05:23")
263.   /*  */
264.   
265.   MakeGap(0)
266. 
267.   AppendLogfile("!LogFileName!", "Zone 3.")
268.   AppendLogfile("!LogFileName!", "Zone Boot: 2019-06-19 07:05:23")
269.   FileSelect
270.     ImportListFromBootOptimize()
271.   FileActions
272.     SortByImportSequence(Ascending)
273.   FileEnd
274. 
275.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.01, VolumeFreeAdj * 0.03))
276.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
277.   MakeGap(GapCurrent)
278.   
279.   AppendLogfile("!LogFileName!", "Zone 4.")
280.   AppendLogfile("!LogFileName!", "Zone Program Hints: 2019-06-19 07:05:23")
281.   FileSelect
282.     ImportListFromProgramHints("*.pf")
283.   FileActions
284.     SortByImportSequence(Ascending)
285.   FileEnd
286. 
287.   /* 209 */
288.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.01, VolumeFreeAdj * 0.01))
289.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
290.   MakeGap(GapCurrent)
291. 
292.   AppendLogfile("!LogFileName!", "Zone 5.")
293.   AppendLogfile("!LogFileName!", "Zone Programs: 2019-06-19 07:05:23")
294. 
295.   FileSelect
296.     (not 
297.       (
298.             (
299.       Size(50000000,0)
300.       or FileName("*.7z")
301.       or FileName("*.arj")
302.       or FileName("*.avi")
303.       or FileName("*.bak")
304.       or FileName("*.bup")
305.       or FileName("*.bz2")
306.       or FileName("*.cab")
307.       or FileName("*.chm")
308.       or FileName("*.dvr-ms")
309.       or FileName("*.gz")
310.       or FileName("*.ifo")
311.       or FileName("*.iso")
312.       or FileName("*.log")
313.       or FileName("*.lzh")
314.       or FileName("*.mp3")
315.       or FileName("*.mp4")
316.       or FileName("*.msi")
317.       or FileName("*.old")
318.       or FileName("*.pdf")
319.       or FileName("*.rar")
320.       or FileName("*.rpm")
321.       or FileName("*.tar")
322.       or FileName("*.wav")
323.       or FileName("*.wmv")
324.       or FileName("*.vob")
325.       or FileName("*.z")
326.       or FileName("*.zip")
327.       )
328. 
329.       or
330. 	      (
331.       DirectoryName("*Archive*") or
332.       DirectoryName("*Backup*") or
333.       DirectoryName("*Bu*") or
334.       DirectoryName("*Old*")
335.     )
336.       )
337.     )
338.     and
339.           (
340. 	    DirectoryName("Boot*") or
341. 	    DirectoryName("DevSupport*") or
342. 	    DirectoryName("Program*") or
343. 	    DirectoryName("Users") or
344. 	    DirectoryName("Windows")
345.     )
346.   FileActions
347. 
348.       /* This next part is tricky. Allowing for a little bit of free space */
349.       /* We want to nudge the program files right up to the MFT and directories */
350.       /* in order to minimize the head travel when acessing these frequently used */
351.       /* files. */
352.       
353. 	  SetVariable(GapCurrent, RoundUp(ZoneEnd + VolumeFreeAdj * 0.01, VolumeFreeAdj * 0.01))
354. 	  AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
355. 
356. 	  SetVariable(ProgramsLocation, RoundDown(MftLocation - (ZoneSize + GapCurrent), VolumeFreeAdj * 0.005))
357. 
358. 	  /* Might be an add gap (ProgramsLocation - GapPrevious) */
359.   	  MakeGap(ProgramsLocation)
360.       
361.       /* Now we write the files. */  
362. 	  SortByLastAccess(Ascending)
363.   FileEnd
364. 
365.   /* Gap work work files, copied, downloaded, etc. */
366.   AppendLogfile("!LogFileName!", "Gap work work files, copied, downloaded, etc. 2019-06-19 07:05:23")
367.   
368.   /* SetVariable(GapCurrent,X) */
369.   /* AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23") */
370.   /* MakeGap(!GapCurrent!) */
371.   
372.   /* Place Regular and Space Hog Zone */
373.   /* past the area of the MFT and directories. */
374.   
375.   /* MakeGap(RoundUp(VolumeUsed * (!MftPer! + 0.15),VolumeUsed * 0.10), DoNotVacate) */
376.   
377.   
378. AppendLogfile("!LogFileName!", "System Zones End: 2019-06-19 07:05:23")
379. AppendLogfile("!LogFileName!",".")
380. 
381.   
382.   /* 287 */
383.   AppendLogfile("!LogFileName!", "Gap Regular and Space Hog Zone: 2019-06-19 07:05:23")
384.   /* past the area of the MFT and directories. */
385.   
386.   
387.   SetVariable(GapCurrent,(RoundUp(VolumeUsed * (MftPer + 0.15),VolumeUsed * 0.10)))
388.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
389.   MakeGap(GapCurrent, DoNotVacate)
390.   
391.   AppendLogfile("!LogFileName!", "Zone 6.")
392.   AppendLogfile("!LogFileName!", "Zone Regular files: 2019-06-19 07:05:23")  
393.   FileSelect
394.     not(
395.             (
396.       Size(50000000,0)
397.       or FileName("*.7z")
398.       or FileName("*.arj")
399.       or FileName("*.avi")
400.       or FileName("*.bak")
401.       or FileName("*.bup")
402.       or FileName("*.bz2")
403.       or FileName("*.cab")
404.       or FileName("*.chm")
405.       or FileName("*.dvr-ms")
406.       or FileName("*.gz")
407.       or FileName("*.ifo")
408.       or FileName("*.iso")
409.       or FileName("*.log")
410.       or FileName("*.lzh")
411.       or FileName("*.mp3")
412.       or FileName("*.mp4")
413.       or FileName("*.msi")
414.       or FileName("*.old")
415.       or FileName("*.pdf")
416.       or FileName("*.rar")
417.       or FileName("*.rpm")
418.       or FileName("*.tar")
419.       or FileName("*.wav")
420.       or FileName("*.wmv")
421.       or FileName("*.vob")
422.       or FileName("*.z")
423.       or FileName("*.zip")
424.       )
425. 
426.       or 
427. 	      (
428.       DirectoryName("*Archive*") or
429.       DirectoryName("*Backup*") or
430.       DirectoryName("*Bu*") or
431.       DirectoryName("*Old*")
432.     )
433.       or 
434.             (
435.       DirectoryName("$RECYCLE.BIN")
436.       or DirectoryName("RECYCLED")
437.       or DirectoryName("RECYCLER")
438.       or DirectoryName("$*")
439.       or DirectoryName("Downloaded Installations")
440.       or DirectoryName("Ehome")
441.       or DirectoryName("Fonts")
442.       or DirectoryName("Help")
443.       or DirectoryName("I386")
444.       or DirectoryName("IME")
445.       or DirectoryName("Installer")
446.       or DirectoryName("ServicePackFiles")
447.       or DirectoryName("SoftwareDistribution")
448.       or DirectoryName("Speech")
449.       or DirectoryName("Symbols")
450.       or DirectoryName("ie?updates")
451.       or DirectoryName("dllcache")
452.       or DirectoryName("Installshield Installation Information")
453.       or DirectoryName("System Volume Information")
454.       or DirectoryName("windows.old")
455.       )
456.       )
457.   FileActions
458.     SortByName(Ascending)
459.   FileEnd
460.   
461.   AppendLogfile("!LogFileName!", "Gap work work files, copied, downloaded, etc: 2019-06-19 07:05:23")
462.   
463.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.20, VolumeUsed * 0.20))
464.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
465.   MakeGap(GapCurrent)
466.   
467.   AppendLogfile("!LogFileName!", "Zone 7.")
468.   AppendLogfile("!LogFileName!", "Zone SpaceHogs, SysLow & Archives: 2019-06-19 07:05:23")  
469.   /* 374 */
470.   /* (less important files that take up a lot of space). */
471.   FileSelect
472.     all
473.   FileActions
474.     SortByName(Ascending)
475.   FileEnd
476. 
477. VolumeEnd
478. 
479. AppendLogfile("!LogFileName!", "System Disk End: 2019-06-19 07:05:23")
480. AppendLogfile("!LogFileName!",".")
481. /* 327 */
482. Pause()
483. 
484. AppendLogfile("!LogFileName!","Development Disk from All Monthly")
485. # MyDefrag v4.0 default script: Data Disk Daily
486. #
487. # This script is part of the standard MyDefrag distribution.
488. 
489. Description("Data Disk Monthly description")   // See the "Settings.MyD" file.
490. 
491. AppendLogfile("!LogFileName!", ".")
492. AppendLogfile("!LogFileName!", "Development Disk.")
493. AppendLogfile("!LogFileName!", "Development Disk Start: 2019-06-19 07:05:23")
494. 
495. AppendLogfile("!LogFileName!", ".")
496. AppendLogfile("!LogFileName!", "Volume: !VolumeDev!")
497. 
498. /* Select and process the volumes one by one. */
499. VolumeSelect
500.   Label("!VolumeDev!")
501. VolumeActions
502. 
503. /* Init */
504. SetVariable(VolumeFreeAdj,(VolumeFree * (VolumeUsed / VolumeSize)))
505. AppendLogfile("!LogFileName!", "Volume Size: !VolumeSize!")
506. AppendLogfile("!LogFileName!", "Volume Used: !VolumeUsed!")
507. AppendLogfile("!LogFileName!", "Volume Free: !VolumeFree!")
508. AppendLogfile("!LogFileName!", "Volume Free Adj: !VolumeFreeAdj!")
509. AppendLogfile("!LogFileName!", ".")
510.   
511.   /* 519 */
512.   AppendLogfile("!LogFileName!", "System Zones.")
513. 
514.     /* System Zones */
515.   
516.   AppendLogfile("!LogFileName!", "System Disk optimized layout for boot and executables. 2019-06-19 07:05:23")
517.   /* Dgh 20190618 */
518.   
519.   /* Init */
520.   /* SetVariable(VolumeFreeAdj, */
521.   /* Don't set here, do it in the run */
522.   
523.   AppendLogfile("!LogFileName!", "Zone 1.")
524.   
525.   /* Place files at 30% into the data on the disk. */
526.   SetVariable(MftLocation, RoundUp(VolumeUsed * MftPer, VolumeUsed * 0.10))
527.   
528.   AppendLogfile("!LogFileName!", "MftLocation: !MftLocation! DoNotVacate 2019-06-19 07:05:23")
529.   MakeGap(MftLocation, DoNotVacate)
530.   
531.   AppendLogfile("!LogFileName!", "Zone 1: Place the MFT: 2019-06-19 07:05:23")
532.   /* and some other special NTFS files. */
533.   FileSelect
534.     SelectNtfsSystemFiles(yes)
535.   FileActions
536.     PlaceNtfsSystemFiles(Ascending, MftSize * 0.1)
537.   FileEnd
538. 
539.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.005, VolumeFreeAdj * 0.005))
540.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
541.   MakeGap(GapCurrent)
542. 
543.   AppendLogfile("!LogFileName!", "Zone 2.")
544.   AppendLogfile("!LogFileName!", "Zone Directories: 2019-06-19 07:05:23")
545.   FileSelect
546.     Directory(yes)
547.   FileActions
548.     SortByName(Ascending)
549.   FileEnd
550. 
551.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.1, VolumeFreeAdj * 0.05))
552.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
553.   MakeGap(GapCurrent)
554. 
555.   AppendLogfile("!LogFileName!", "Place files at the beginning of the disk: 2019-06-19 07:05:23")
556.   /*  */
557.   
558.   MakeGap(0)
559. 
560.   AppendLogfile("!LogFileName!", "Zone 3.")
561.   AppendLogfile("!LogFileName!", "Zone Boot: 2019-06-19 07:05:23")
562.   FileSelect
563.     ImportListFromBootOptimize()
564.   FileActions
565.     SortByImportSequence(Ascending)
566.   FileEnd
567. 
568.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.01, VolumeFreeAdj * 0.03))
569.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
570.   MakeGap(GapCurrent)
571.   
572.   AppendLogfile("!LogFileName!", "Zone 4.")
573.   AppendLogfile("!LogFileName!", "Zone Program Hints: 2019-06-19 07:05:23")
574.   FileSelect
575.     ImportListFromProgramHints("*.pf")
576.   FileActions
577.     SortByImportSequence(Ascending)
578.   FileEnd
579. 
580.   /* 209 */
581.   SetVariable(GapCurrent, RoundUp(ZoneBegin + VolumeFreeAdj * 0.01, VolumeFreeAdj * 0.01))
582.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
583.   MakeGap(GapCurrent)
584. 
585.   AppendLogfile("!LogFileName!", "Zone 5.")
586.   AppendLogfile("!LogFileName!", "Zone Programs: 2019-06-19 07:05:23")
587. 
588.   FileSelect
589.     (not 
590.       (
591.             (
592.       Size(50000000,0)
593.       or FileName("*.7z")
594.       or FileName("*.arj")
595.       or FileName("*.avi")
596.       or FileName("*.bak")
597.       or FileName("*.bup")
598.       or FileName("*.bz2")
599.       or FileName("*.cab")
600.       or FileName("*.chm")
601.       or FileName("*.dvr-ms")
602.       or FileName("*.gz")
603.       or FileName("*.ifo")
604.       or FileName("*.iso")
605.       or FileName("*.log")
606.       or FileName("*.lzh")
607.       or FileName("*.mp3")
608.       or FileName("*.mp4")
609.       or FileName("*.msi")
610.       or FileName("*.old")
611.       or FileName("*.pdf")
612.       or FileName("*.rar")
613.       or FileName("*.rpm")
614.       or FileName("*.tar")
615.       or FileName("*.wav")
616.       or FileName("*.wmv")
617.       or FileName("*.vob")
618.       or FileName("*.z")
619.       or FileName("*.zip")
620.       )
621. 
622.       or
623. 	      (
624.       DirectoryName("*Archive*") or
625.       DirectoryName("*Backup*") or
626.       DirectoryName("*Bu*") or
627.       DirectoryName("*Old*")
628.     )
629.       )
630.     )
631.     and
632.           (
633. 	    DirectoryName("Boot*") or
634. 	    DirectoryName("DevSupport*") or
635. 	    DirectoryName("Program*") or
636. 	    DirectoryName("Users") or
637. 	    DirectoryName("Windows")
638.     )
639.   FileActions
640. 
641.       /* This next part is tricky. Allowing for a little bit of free space */
642.       /* We want to nudge the program files right up to the MFT and directories */
643.       /* in order to minimize the head travel when acessing these frequently used */
644.       /* files. */
645.       
646. 	  SetVariable(GapCurrent, RoundUp(ZoneEnd + VolumeFreeAdj * 0.01, VolumeFreeAdj * 0.01))
647. 	  AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
648. 
649. 	  SetVariable(ProgramsLocation, RoundDown(MftLocation - (ZoneSize + GapCurrent), VolumeFreeAdj * 0.005))
650. 
651. 	  /* Might be an add gap (ProgramsLocation - GapPrevious) */
652.   	  MakeGap(ProgramsLocation)
653.       
654.       /* Now we write the files. */  
655. 	  SortByLastAccess(Ascending)
656.   FileEnd
657. 
658.   /* Gap work work files, copied, downloaded, etc. */
659.   AppendLogfile("!LogFileName!", "Gap work work files, copied, downloaded, etc. 2019-06-19 07:05:23")
660.   
661.   /* SetVariable(GapCurrent,X) */
662.   /* AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23") */
663.   /* MakeGap(!GapCurrent!) */
664.   
665.   /* Place Regular and Space Hog Zone */
666.   /* past the area of the MFT and directories. */
667.   
668.   /* MakeGap(RoundUp(VolumeUsed * (!MftPer! + 0.15),VolumeUsed * 0.10), DoNotVacate) */
669.   
670.   
671. AppendLogfile("!LogFileName!", "System Zones End: 2019-06-19 07:05:23")
672. AppendLogfile("!LogFileName!",".")
673.   
674.   
675.   /* 519 */
676.   AppendLogfile("!LogFileName!", "Zone 6.")
677.   AppendLogfile("!LogFileName!", "Zone Dev, ToDo: 2019-06-19 07:05:23")
678.   FileSelect
679.     (not 
680.     (
681. 	      (
682.       DirectoryName("*Archive*") or
683.       DirectoryName("*Backup*") or
684.       DirectoryName("*Bu*") or
685.       DirectoryName("*Old*")
686.     )
687.       or    
688.             (
689.       DirectoryName("$RECYCLE.BIN")
690.       or DirectoryName("RECYCLED")
691.       or DirectoryName("RECYCLER")
692.       or DirectoryName("$*")
693.       or DirectoryName("Downloaded Installations")
694.       or DirectoryName("Ehome")
695.       or DirectoryName("Fonts")
696.       or DirectoryName("Help")
697.       or DirectoryName("I386")
698.       or DirectoryName("IME")
699.       or DirectoryName("Installer")
700.       or DirectoryName("ServicePackFiles")
701.       or DirectoryName("SoftwareDistribution")
702.       or DirectoryName("Speech")
703.       or DirectoryName("Symbols")
704.       or DirectoryName("ie?updates")
705.       or DirectoryName("dllcache")
706.       or DirectoryName("Installshield Installation Information")
707.       or DirectoryName("System Volume Information")
708.       or DirectoryName("windows.old")
709.       )
710.     )
711.     )
712.     and
713.     (
714. 	    DirectoryName("*Dev") or
715. 	    DirectoryName("*ToDo*")
716.     )
717.   FileActions
718.     SortByName(Ascending)
719.   FileEnd
720. 
721.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.01))
722.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
723.   MakeGap(GapCurrent)
724.   
725.   AppendLogfile("!LogFileName!", "Zone 7.")
726.   AppendLogfile("!LogFileName!", "Zone: Ide, Scripts, Support: 2019-06-19 07:05:23")
727.   FileSelect
728.     (not 
729.     (
730. 	      (
731.       DirectoryName("*Archive*") or
732.       DirectoryName("*Backup*") or
733.       DirectoryName("*Bu*") or
734.       DirectoryName("*Old*")
735.     )
736.       or    
737.             (
738.       DirectoryName("$RECYCLE.BIN")
739.       or DirectoryName("RECYCLED")
740.       or DirectoryName("RECYCLER")
741.       or DirectoryName("$*")
742.       or DirectoryName("Downloaded Installations")
743.       or DirectoryName("Ehome")
744.       or DirectoryName("Fonts")
745.       or DirectoryName("Help")
746.       or DirectoryName("I386")
747.       or DirectoryName("IME")
748.       or DirectoryName("Installer")
749.       or DirectoryName("ServicePackFiles")
750.       or DirectoryName("SoftwareDistribution")
751.       or DirectoryName("Speech")
752.       or DirectoryName("Symbols")
753.       or DirectoryName("ie?updates")
754.       or DirectoryName("dllcache")
755.       or DirectoryName("Installshield Installation Information")
756.       or DirectoryName("System Volume Information")
757.       or DirectoryName("windows.old")
758.       )
759.     ))
760.     and
761.     (
762. 	    DirectoryName("*Ide") or
763. 	    DirectoryName("*Script*") or
764. 	    DirectoryName("*Support*")
765.     )
766.   FileActions
767.     SortByName(Ascending)
768.   FileEnd
769. 
770.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.02))
771.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
772.   MakeGap(GapCurrent)
773.   
774.   AppendLogfile("!LogFileName!", "Zone 8.")
775.   AppendLogfile("!LogFileName!", "Zone: , Links: 2019-06-19 07:05:23")
776.   FileSelect
777.     (not 
778.     (
779. 	      (
780.       DirectoryName("*Archive*") or
781.       DirectoryName("*Backup*") or
782.       DirectoryName("*Bu*") or
783.       DirectoryName("*Old*")
784.     )
785.     ))
786.     and
787.     (
788. 	    DirectoryName("*Favorites*") or
789. 	    DirectoryName("*Job*") or
790. 	    DirectoryName("*Links*") or
791. 	    DirectoryName("*Logs*") or
792. 	    DirectoryName("*Mdm*")
793.     )
794.   FileActions
795.     SortByName(Ascending)
796.   FileEnd
797. 
798.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.02))
799.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
800.   MakeGap(GapCurrent)
801. 
802.   AppendLogfile("!LogFileName!", "Zone 9.")
803.   AppendLogfile("!LogFileName!", "Zone: People: 2019-06-19 07:05:23")
804.   FileSelect
805.     (not 
806.     (
807. 	      (
808.       DirectoryName("*Archive*") or
809.       DirectoryName("*Backup*") or
810.       DirectoryName("*Bu*") or
811.       DirectoryName("*Old*")
812.     )
813.       or    
814.             (
815.       DirectoryName("$RECYCLE.BIN")
816.       or DirectoryName("RECYCLED")
817.       or DirectoryName("RECYCLER")
818.       or DirectoryName("$*")
819.       or DirectoryName("Downloaded Installations")
820.       or DirectoryName("Ehome")
821.       or DirectoryName("Fonts")
822.       or DirectoryName("Help")
823.       or DirectoryName("I386")
824.       or DirectoryName("IME")
825.       or DirectoryName("Installer")
826.       or DirectoryName("ServicePackFiles")
827.       or DirectoryName("SoftwareDistribution")
828.       or DirectoryName("Speech")
829.       or DirectoryName("Symbols")
830.       or DirectoryName("ie?updates")
831.       or DirectoryName("dllcache")
832.       or DirectoryName("Installshield Installation Information")
833.       or DirectoryName("System Volume Information")
834.       or DirectoryName("windows.old")
835.       )
836.     ))
837.     and
838.     (
839.         DirectoryName("*Capture*") or
840.         DirectoryName("Corp*") or
841.         DirectoryName("Dgh*") or
842.         DirectoryName("*Document*") or
843.         DirectoryName("*Download*") or
844.         DirectoryName("Export*") or
845.         DirectoryName("Import*") or
846.         DirectoryName("Kids*") or
847.         DirectoryName("Mail*") or
848.         DirectoryName("*Person*") or
849.         DirectoryName("Public*") or
850.         DirectoryName("Rec*") or
851.         DirectoryName("Search*") or
852.         DirectoryName("ToolBar*")
853.     )    
854.   FileActions
855.     SortByName(Ascending)
856.   FileEnd
857. 
858.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.01))
859.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
860.   MakeGap(GapCurrent)
861. 
862.   AppendLogfile("!LogFileName!", "Zone 10.")
863.   AppendLogfile("!LogFileName!", "Zone: Share: 2019-06-19 07:05:23")
864.   FileSelect
865.     (not 
866.     (
867. 	      (
868.       DirectoryName("*Archive*") or
869.       DirectoryName("*Backup*") or
870.       DirectoryName("*Bu*") or
871.       DirectoryName("*Old*")
872.     )
873.       or    
874.             (
875.       DirectoryName("$RECYCLE.BIN")
876.       or DirectoryName("RECYCLED")
877.       or DirectoryName("RECYCLER")
878.       or DirectoryName("$*")
879.       or DirectoryName("Downloaded Installations")
880.       or DirectoryName("Ehome")
881.       or DirectoryName("Fonts")
882.       or DirectoryName("Help")
883.       or DirectoryName("I386")
884.       or DirectoryName("IME")
885.       or DirectoryName("Installer")
886.       or DirectoryName("ServicePackFiles")
887.       or DirectoryName("SoftwareDistribution")
888.       or DirectoryName("Speech")
889.       or DirectoryName("Symbols")
890.       or DirectoryName("ie?updates")
891.       or DirectoryName("dllcache")
892.       or DirectoryName("Installshield Installation Information")
893.       or DirectoryName("System Volume Information")
894.       or DirectoryName("windows.old")
895.       )
896.     ))
897.     and
898.     (
899.         DirectoryName("*Family*") or
900.         DirectoryName("*Share*")
901.     )    
902.   FileActions
903.     SortByName(Ascending)
904.   FileEnd
905. 
906.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.01))
907.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
908.   MakeGap(GapCurrent)
909. 
910.   AppendLogfile("!LogFileName!", "Zone 11.")
911.   AppendLogfile("!LogFileName!", "Zone: System: 2019-06-19 07:05:23")
912.   FileSelect
913.     (not 
914.     (
915. 	      (
916.       DirectoryName("*Archive*") or
917.       DirectoryName("*Backup*") or
918.       DirectoryName("*Bu*") or
919.       DirectoryName("*Old*")
920.     )
921.       or    
922.             (
923.       DirectoryName("$RECYCLE.BIN")
924.       or DirectoryName("RECYCLED")
925.       or DirectoryName("RECYCLER")
926.       or DirectoryName("$*")
927.       or DirectoryName("Downloaded Installations")
928.       or DirectoryName("Ehome")
929.       or DirectoryName("Fonts")
930.       or DirectoryName("Help")
931.       or DirectoryName("I386")
932.       or DirectoryName("IME")
933.       or DirectoryName("Installer")
934.       or DirectoryName("ServicePackFiles")
935.       or DirectoryName("SoftwareDistribution")
936.       or DirectoryName("Speech")
937.       or DirectoryName("Symbols")
938.       or DirectoryName("ie?updates")
939.       or DirectoryName("dllcache")
940.       or DirectoryName("Installshield Installation Information")
941.       or DirectoryName("System Volume Information")
942.       or DirectoryName("windows.old")
943.       )
944.     ))
945.     and
946.     (
947.         DirectoryName("Data*") or
948.         DirectoryName("Device*") or
949.         DirectoryName("Maintenance*") or
950.         DirectoryName("Os*") or
951.         DirectoryName("Security*") or
952.         DirectoryName("System*") or
953.         DirectoryName("Sw*") or
954.         DirectoryName("Temp*") or
955.         DirectoryName("User*") or
956.         DirectoryName("Work*")
957.     )    
958.   FileActions
959.     SortByName(Ascending)
960.   FileEnd
961. 
962.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.005))
963.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
964.   MakeGap(GapCurrent)
965. 
966.   AppendLogfile("!LogFileName!", "Zone 12.")
967.   AppendLogfile("!LogFileName!", "Zone: World: 2019-06-19 07:05:23")
968.   FileSelect
969.     (not 
970.     (
971. 	      (
972.       DirectoryName("*Archive*") or
973.       DirectoryName("*Backup*") or
974.       DirectoryName("*Bu*") or
975.       DirectoryName("*Old*")
976.     )
977.       or    
978.             (
979.       DirectoryName("$RECYCLE.BIN")
980.       or DirectoryName("RECYCLED")
981.       or DirectoryName("RECYCLER")
982.       or DirectoryName("$*")
983.       or DirectoryName("Downloaded Installations")
984.       or DirectoryName("Ehome")
985.       or DirectoryName("Fonts")
986.       or DirectoryName("Help")
987.       or DirectoryName("I386")
988.       or DirectoryName("IME")
989.       or DirectoryName("Installer")
990.       or DirectoryName("ServicePackFiles")
991.       or DirectoryName("SoftwareDistribution")
992.       or DirectoryName("Speech")
993.       or DirectoryName("Symbols")
994.       or DirectoryName("ie?updates")
995.       or DirectoryName("dllcache")
996.       or DirectoryName("Installshield Installation Information")
997.       or DirectoryName("System Volume Information")
998.       or DirectoryName("windows.old")
999.       )
1000.     ))
1001.     and
1002.     (
1003.         DirectoryName("World*") or
1004.         DirectoryName("Education*") or
1005.         DirectoryName("Entertainment*") or
1006.         DirectoryName("Food*") or
1007.         DirectoryName("Geography*") or
1008.         DirectoryName("Help*") or
1009.         DirectoryName("Humo*") or
1010.         DirectoryName("Internet*") or
1011.         DirectoryName("Legal*") or
1012.         DirectoryName("Linquistics*") or
1013.         DirectoryName("Media*") or
1014.         DirectoryName("Multimedia*") or
1015.         DirectoryName("Sales*") or
1016.         DirectoryName("Science*") or
1017.         DirectoryName("Social*") or
1018.         DirectoryName("Technology*")
1019.     )    
1020.   FileActions
1021.     SortByName(Ascending)
1022.   FileEnd
1023. 
1024.   SetVariable(GapCurrent,RoundUp(ZoneBegin,VolumeSize * 0.005))
1025.   AppendLogfile("!LogFileName!", "Gap: !GapCurrent! 2019-06-19 07:05:23")
1026.   MakeGap(GapCurrent)
1027. 
1028.   AppendLogfile("!LogFileName!", "Zone 13.")
1029.   AppendLogfile("!LogFileName!", "All other files: 2019-06-19 07:05:23")
1030.   FileSelect
1031.     all
1032.   FileActions
1033.     SortByName(Ascending)
1034.   FileEnd
1035. 
1036.   /* Write the "after" statistics to the logfile. See the "Settings.MyD" file
1037.      for the definition of the "LogAfter" string. */
1038.   AppendLogfile("MyDefrag.log", "LogAfter")
1039. 
1040. VolumeEnd
1041. 
1042. AppendLogfile("!LogFileName!", "Development Disk End: 2019-06-19 07:05:23")
1043. AppendLogfile("!LogFileName!",".")
1044. 
1045. /* 926 */
1046. Pause()
1047. 
1048. !include "MdmVolumeWhenFinished.MyDc"!
1049. Pause()
1050. 
1051. /* Show the MyDefrag logfile. */
1052. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",' -vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"','"!MdmLogFileName!"')" */
1053. 
1054. /* SetVariable(MdmTest,"E:\Test.txt") */
1055. /* RunProgram('E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe','-vm ','C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe','--launcher.openFile ','E:\Test.txt') */
1056. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe -vm 'C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe' 'E:\Test.txt'") */
1057. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe -vm 'C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe' --launcher.openFile 'E:\Test.txt'") */
1058. /* RunProgram('"E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe" -vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe" --launcher.openFile "E:\Test.txt"') */
1059. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe") Opened program */
1060. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe", "E:\Test.txt") */
1061. /* RunProgram('E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe','-vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"','--launcher.openFile','E:\Test.txt') */
1062. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",'-vm','"C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"','"E:\Test.txt"') */
1063. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",'-vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"','--launcher.openFile "E:\Test.txt"') */
1064. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",'--launcher.openFile','"E:\Test.txt"') */
1065. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",'--launcher.openFile "E:\Test.txt"',' -vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"') */
1066. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",' -vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"',' --launcher.openFile "E:\Test.txt"') */
1067. /* RunProgram("E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe",'-vm','"C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe"','--launcher.openFile','"E:\Test.txt"') */
1068. /* RunProgram('"E:\Ide\Eclipse\EclStdVs4_2_1_32b\eclipse\eclipse.exe" -vm "C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaw.exe" "E:\Test.txt"') */
1069.  
