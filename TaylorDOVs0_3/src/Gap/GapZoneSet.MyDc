# Script: GapZoneSet
# Zone Do Gap
# Gap Calculation Methods:

/* 1) Anything you need to add first. */
/* empty */

/* ------------------------- */
/* 2) REQUESTED: Get the GapRequested using the Method from Settings. */
	# GapRequestedStd.

		/* ------------------------- */
		# GAP CALCULATION METHOD (CURRENTLY STANDARD)

		!include "..\Gap\GapCalcMethod.MyDc"!

	# SetVariable(GapRequested, GapRequested[Std, Mft, Os...] )

	SetVariable(GapRequestedLoc, ZoneEnd + GapRequested)

	AppendLogfile("!LogFileName!", "  Gap requested: !GapRequested! at !GapRequestedLoc!")

/* ------------------------- */
/* 3) SMALL ZONE ADJUSTMENT. */
/* Gab cant be larger than half the Zone Size. */

	SetVariable(GapAdjusted, Minimum(GapRequested, ZoneSize * 2 ) )
	
	SetVariable(GapAdjustedLoc, ZoneEnd + GapAdjusted)

	AppendLogfile("!LogFileName!", "  Gap adjusted: !GapAdjusted! at !GapAdjustedLoc!")

/* ------------------------- */
/* 4) VOLUME ROUND UP: to round Volume even numbers to prevent constant zone moves. */
# Gap Adjustments.

	SetVariable(GapRoundedLoc, RoundUp(GapAdjustedLoc, ZoneVolRoundUp * VolumeSize) )
	
	SetVariable(GapRounded, GapRoundedLoc - ZoneEnd)

	AppendLogfile("!LogFileName!", "  Gap rounded: !GapRounded! at !GapRoundedLoc!")

/* ------------------------- */
# BYPASS THIS.
	/* This is definitely wrong. */
	/* The question is can we steal gap from the next zone */
	/* More... Can we put the gap on the bottom of the zone and pack upward. */
	/* X) OVERFLOW: Adjust for previous zone overflow. */
		# Zone Overflow.
		# SetVariable(GapAdjusted, GapRounded + VolumeFreeRequested - VolumeFreeUsed)
			# AppendLogfile("!LogFileName!", "  Gap adjusted: !GapAdjusted! (VolumeFreeRequested # !VolumeFreeRequested! 			        # VolumeFreeUsed !				# VolumeFreeUsed!)")

/* ------------------------- */
/* 5) END OF VOLUME: Adjust for total remaining volume space available. */
# Remaining free space available.

	SetVariable(GapAvailableLoc, MaxNextZoneBegin - VolumeRoundUpTiny)
	
	SetVariable(GapAvailable, GapAvailableLoc - ZoneEnd)

	AppendLogfile("!LogFileName!", "  Gap adjusted: !GapAvailable! at !GapAvailableLoc!")

/* ------------------------- */
# CURRENT gap to use.

	SetVariable(GapCurrentLoc, Minimum(GapRoundedLoc, GapAvailableLoc) )

	SetVariable(GapCurrent, GapCurrentLoc - ZoneEnd)

/* ------------------------- */
/* 6) GAP USED DEBUG: An access point to add debugging or other code of yours. */
# Debugging.

	SetVariable(GapUsed, GapCurrent) // for debugging

	SetVariable(GapUsedLoc, GapCurrentLoc) // for debugging

		# Your code HERE

/* ------------------------- */
/* 7) YOUR CODE. */
# YOUR CODE HERE:
	# INPUT: GapCurrent or GapCurrentLoc
	# OUTPUT: GapUsed...

/* ------------------------- */
# Gap Size.
# Actual Size of Gap.

	SetVariable(GapActual, GapUsedLoc - ZoneEnd)

/* ------------------------- */
